name: dockercompose7189600114978578523
services:
  customers.api:
    build:
      context: /Users/ferhatkarabulut/Projects/Microservices
      dockerfile: Customers/Customers.Api/Dockerfile
    depends_on:
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    image: customers
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "53454"
      protocol: tcp
    volumes:
    - type: bind
      source: /Users/ferhatkarabulut/.aspnet/http
      target: /root/.aspnet/http
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /Users/ferhatkarabulut/.microsoft/usersecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  sqldata:
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: P@ssW0rd1!
    image: mcr.microsoft.com/azure-sql-edge:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: "1433"
      protocol: tcp
    volumes:
    - type: volume
      source: customerapi-sqldata
      target: /var/opt/mssql
      volume: {}
networks:
  default:
    name: dockercompose7189600114978578523_default
volumes:
  customerapi-sqldata:
    name: dockercompose7189600114978578523_customerapi-sqldata