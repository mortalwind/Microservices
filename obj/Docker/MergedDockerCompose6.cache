name: dockercompose5171990499101976780
services:
  customers.api:
    build:
      context: /Users/ferhatkarabulut/Desktop/Projects/Microservices
      dockerfile: Customers/Customers.Api/Dockerfile
    depends_on:
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    image: customers
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "53454"
      protocol: tcp
    volumes:
    - type: bind
      source: /Users/ferhatkarabulut/.aspnet/http
      target: /root/.aspnet/http
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /Users/ferhatkarabulut/.microsoft/usersecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  elasticsearch:
    cap_add:
    - IPC_LOCK
    container_name: elasticsearch
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
    networks:
      elastic: null
    ports:
    - mode: ingress
      target: 9200
      published: "9200"
      protocol: tcp
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
    - type: volume
      source: elasticsearch-data
      target: /usr/share/elasticsearch/data
      volume: {}
  products.api:
    build:
      context: /Users/ferhatkarabulut/Desktop/Projects/Microservices
      dockerfile: Products/Products.Api/Dockerfile
    depends_on:
      elasticsearch:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: products
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: /Users/ferhatkarabulut/.aspnet/https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /Users/ferhatkarabulut/.microsoft/usersecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  sqldata:
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: P@ssW0rd1!
    image: mcr.microsoft.com/azure-sql-edge:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: "1433"
      protocol: tcp
    volumes:
    - type: volume
      source: customerapi-sqldata
      target: /var/opt/mssql
      volume: {}
networks:
  default:
    name: dockercompose5171990499101976780_default
  elastic:
    name: dockercompose5171990499101976780_elastic
    driver: bridge
volumes:
  customerapi-sqldata:
    name: dockercompose5171990499101976780_customerapi-sqldata
  elasticsearch-data:
    name: dockercompose5171990499101976780_elasticsearch-data
    driver: local